global class RingQ {
    webService static String getUserDetail() {
        List<User> user = [SELECT SIP_Extension__c, SIP_Username__c, SIP_Password__c, RingQ_Server__c FROM User WHERE Id = :UserInfo.getUserId() LIMIT 1];
        if (user.isEmpty()) { return '{}'; }
        return JSON.serialize(user[0]);
    }
    webService static String findContactDetail(String phoneNumber) {
        List<Contact> contact = [SELECT Id, FirstName, LastName FROM Contact WHERE Phone = :phoneNumber LIMIT 1];
        if (contact.isEmpty()) { return '{}'; }
        return JSON.serialize(contact[0]);
    }
    webService static String findAccountDetail(String phoneNumber) {
        List<Account> account = [SELECT Id, Name FROM Account WHERE Phone = :phoneNumber LIMIT 1];
        if (account.isEmpty()) { return '{}';}
        return JSON.serialize(account[0]);
    }
    webService static String findLeadsDetail(String phoneNumber) {
        List<Lead> lead = [SELECT Id, FirstName, LastName FROM Lead WHERE Phone = :phoneNumber LIMIT 1];
        if (lead.isEmpty()) { return '{}'; }
        return JSON.serialize(lead[0]);
    }
    webService static String getSalesforceDomainUrl() {
        return System.Url.getOrgDomainUrl().toExternalForm();
    }
    webService static void createContact(String firstName, String lastName, String phone) {
        new Contact(FirstName = firstName, LastName = lastName, Phone = phone);
    }
    webService static void createLead(String firstName, String lastName, String companyName, String phone) {
        new Lead(Firstname = firstName, lastName = lastName, Company = companyName, Phone = phone);
    }
    webService static void createAccount(String accountName, String phone) {
        new Account(Name = accountName, Phone = phone);
    }
}
